<h2 id="track-heading" class="flex text-center text-sm items-center"></h2>
<section
  id="results"
  class="w-full max-w-4xl grid gap-4 grid-cols-[repeat(auto-fit,_minmax(140px,1fr))] sm:grid-cols-[repeat(auto-fit,_minmax(220px,1fr))]"
>
</section>
<script>
  import { assets, spinner, socials } from "@/lib/constants";
  import { validateInput } from "@/lib/schemas";
  import {
    $,
    $$,
    createShareUrl,
    createSocialsUrl,
    addClipboardEvent
  } from "@/lib/utils";
  import type { TrackLink } from "@/lib/types";

  const submit = $("button[type=submit] span")!;

  const form = $("form")!;
  form.addEventListener("submit", (e) => {
    e.preventDefault();

    const form = e.target as HTMLFormElement;
    const formData = new FormData(form);
    const url = formData.get("url") as string;

    const result = validateInput(url)
    if (result.error) {
      return window.toast({
        title: "Please enter a valid Spotify URL",
        location: "bottom-center",
        dismissible: true,
        type: "warning",
        icon: true,
      });
    }

    const trackId = result.data;
    submit.innerHTML = `${spinner} Loading...`;

    fetch(`/api/search?track=${trackId}`)
      .then((res): Promise<{ data: TrackLink[]; artist: string, image: string }> => res.json())
      .then((info) => {
        const { data, artist, image } = info;
        addTrackInfo(artist);
        addHtmlNodes({ data, artist, image });
      })
      .catch((err) => {
        console.error(err);
      })
      .finally(() => {
        submit.innerHTML = "Get Alternatives";
      });

    function addTrackInfo(query: string) {
      const trackHeading = $("#track-heading");
      const results = $("#results")!;
      const socialsEl = $("#socials")!;
      socialsEl?.remove();

      results.classList.add("py-20");

      trackHeading.classList.add("mt-6", "animate-fade-in-up");
      trackHeading.innerHTML = `<span class="opacity-70">Results for "${query}"</span>`;

      // add share button clipboard
      const shareIcon = document.createElement("div");
      shareIcon.id = "share-playlist";
      shareIcon.classList.add("ml-2.5", "animate-fade-in-up");
      shareIcon.innerHTML = socials;
      trackHeading.after(shareIcon);
    }

    function addHtmlNodes({
      data,
      artist,
      image,
    }: {
      data: TrackLink[];
      artist: string;
      image: string;
    }) {
      const hero = $("#hero");
      const results = $("#results")!;

      hero?.remove();

      results.innerHTML = data
        .map((source) => {
          const [company, url] = Object.entries(source)[0];
          const asset = assets[company as keyof typeof assets];
          return `\
					<article class="relative aspect-square animate-fade-in-up flex sm:transition-transform sm:hover:-translate-y-3">
						<a
							href=${url}
							target="_blank"
							rel="noopener noreferrer"
							class="flex flex-col items-center justify-center size-full border border-neutral-400/50 rounded-3xl p-6 bg-white/45"
						>
							${asset ? (company !== "deezer" ? `<img src=${asset} alt=${company} class="w-full block ${(company === "amazon" || company === "genius") ? "rounded-[30px]" : ""}" />` : `<img src=${asset} alt=${company} class="w-full block" />`.repeat(3)) : `<h3 class="uppercase text-xl md:text-3xl font-semibold">${company}</h3>`}
						</a>
            <button id="clipboard" data-url=${url} class="hidden sm:flex z-10 absolute top-0 right-0 p-2 transition-opacity hover:opacity-80 text-pink-400 cursor-pointer">
              <svg class="w-4 h-4 pointer-events-none" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect width="8" height="4" x="8" y="2" rx="1" ry="1"/><path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"/></svg>
            </button>
					</article>
				`;
        })
        .join("");

      if (data.length > 0) {
        addClipboardEvent($$("#clipboard")!);

        const urlEncoded = createShareUrl(data, artist, image);

        function addSocialEvents(element: NodeListOf<HTMLElement>) {
          element.forEach((button) => {
            button.addEventListener("click", () => {
              const id = button.getAttribute("data-id");

              if (id === "copy") {
                createSocialsUrl({ id, artist, image, urlEncoded, trackId });
                window.toast({
                  title: "Share alternatives!",
                  location: "bottom-center",
                  dismissible: true,
                  type: "success",
                  icon: true,
                });
              } else if (id === "whatsapp") {
                createSocialsUrl({ id, artist, image, urlEncoded, trackId });
              } else if (id === "x") {
                createSocialsUrl({ id, artist, image, urlEncoded, trackId });
              }
            });
          });
        }

        addSocialEvents($$("#socials button[data-id]")!);
      } else {
        $("#share-playlist")?.remove();
      }
    }
  });
</script>
