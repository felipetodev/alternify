---
import Layout from "../../layouts/Layout.astro";
import Socials from "../../components/Socials.astro";
import { assets, servicesAvailable } from "../../lib/constants";
import { db, eq, Share } from "astro:db";

let isDB = false;
const { search } = Astro.url;
const { id } = Astro.params;

if (!id) {
  Astro.response.status = 404;
  Astro.response.statusText = 'Not found';
}

let artist: string | undefined = ""
let results: string | undefined = ""

const urlParams = new URLSearchParams(search);
artist = urlParams.get("artist") ?? undefined;
results = urlParams.get("results") ?? undefined;

if (id) {
  const trackInfo = (await db.select()
  .from(Share)
  .where(eq(Share.id, id!)))[0] ?? null;

  if (trackInfo !== null) {
    isDB = true;
    const urlParams = new URLSearchParams(trackInfo.url);
    artist = urlParams.get("artist")!;
    results = urlParams.get("results")!;
  }
}

if (!artist || !results) {
  Astro.response.status = 404;
  Astro.response.statusText = 'Not found';
}

const links = results?.split("&").map((result) => {
  const [key, value] = result.split("=");

  // validate that key in results is a valid music service
  if (!servicesAvailable.includes(key as any)) {
    Astro.response.status = 404;
    Astro.response.statusText = 'Not found';
  }
  return { key, value: decodeURIComponent(value) };
});

if (!isDB && !artist && !results) {
  console.error("No artist or results found");
  Astro.response.status = 404;
  Astro.response.statusText = 'Not found';
}

const shareHref = isDB
  ? `${Astro.url.origin}/share/${id}`
  : `?artist=${encodeURIComponent(artist!)}&results=${encodeURIComponent(results!)}`;

---
<Layout
  title={`Alternify - Share | ${artist}`}
  description={`Found ${artist} alternative tracks`}
>
  <div class="flex flex-col text-center gap-4 mb-4 mt-10">
    <a href="/" class="hover:opacity-80 transition-opacity">
      <h1 class="text-4xl">Alternify - Share ðŸŽµ</h1>
    </a>
    <h2 class="opacity-60">Find Alternatives to your Spotify Tracks</h2>
  </div>
  <h2 class="animate-fade-in-up mt-6 text-sm opacity-70 text-center flex items-center">
    Results for "{artist}"
  </h2>
  <Socials
    title={artist!}
    href={shareHref}
  />
  <section
    id="results"
    class="w-full max-w-4xl grid gap-4 grid-cols-[repeat(auto-fit,_minmax(140px,1fr))] sm:grid-cols-[repeat(auto-fit,_minmax(220px,1fr))] mt-20"
  >
    {
      links?.map(({ key: company, value: url }) => {
        const asset = assets[company as keyof typeof assets];
        return (
          <article class="relative animate-fade-in-up flex sm:transition-transform sm:hover:-translate-y-3">
            <a
              href={url}
              target="_blank"
              rel="noopener noreferrer"
              class="flex flex-col items-center justify-center size-full border border-neutral-400/50 rounded-3xl p-6 bg-white/45"
            >
              {asset ? (
                company !== "deezer" ? (
                  <img
                    src={asset}
                    alt={company}
                    class={`w-full block ${company === "amazon" ? "rounded-[30px]" : ""}`}
                  />
                ) : (
                  <img src={asset} alt={company} class="w-full block" />
                  <img src={asset} alt={company} class="w-full block" />
                  <img src={asset} alt={company} class="w-full block" />
                )
              ) : (
                <h3 class="uppercase text-xl md:text-3xl font-semibold">
                  {company}
                </h3>
              )}
            </a>
          </article>
        );
      })
    }
  </section>
</Layout>
